[build-system]
requires = ["setuptools>=77.0.3"]
build-backend = "setuptools.build_meta"

[project]
name = "pyfakefs"
description = "Implements a fake file system that mocks the Python file system modules."
readme = "README.md"
license = "Apache-2.0"
license-files = ["COPYING"]
authors = [
    { name = "Google", email = "google-pyfakefs@google.com" },
    { name = "John McGehee", email = "pyfakefs@johnnado.com" }
]
maintainers = [
    { name = "mrbean-bremen", email = "hansemrbean@googlemail.com" }
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Operating System :: POSIX",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Testing",
    "Topic :: System :: Filesystems",
    "Framework :: Pytest",
]
keywords = [
    "testing",
    "filesystem",
    "mocking",
    "unittest",
    "pytest",
]
requires-python = ">=3.10"
dynamic = ["version"]
entry-points.pytest11.fakefs = "pyfakefs.pytest_plugin"

[project.urls]
documentation = "https://pytest-pyfakefs.readthedocs.io/"
homepage = "https://github.com/pytest-dev/pyfakefs"
repository = "https://github.com/pytest-dev/pyfakefs"
changelog = "https://github.com/pytest-dev/pyfakefs/blob/main/CHANGES.md"

[dependency-groups]
dev = [
    "pytest>=6.2.5",
    "pre-commit>=4.1.4",
]
doc = [
    "sphinx>=7.0.0",
    "furo>=2024.8.6"
]
extra = [
    "pandas==2.2.3",
    "xlrd==2.0.1",
    "openpyxl==3.1.5",
]
xdist = [
    "pytest-xdist",
]

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
where = ["pyfakefs"]
pyfakefs = ["py.typed", "**/*.parquet", "**/*.xlsx"]

[tool.setuptools.dynamic]
version = { attr = "pyfakefs.__version__" }
